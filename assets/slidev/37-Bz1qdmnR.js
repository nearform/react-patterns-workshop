import{I as f}from"./default-D5FNdOQF.js";import{_ as h,aM as i}from"../index-Dxtvmalw.js";import{p as d,u as c,f as g}from"./context-CFyRt0vm.js";import{o as w,c as x,k,q as v,s as b,e,a6 as o}from"../modules/vue-Cx0_jHut.js";import"../modules/shiki-BjPRmREE.js";const y={__name:"37",setup(u,{expose:r}){r(),d(i);const{$slidev:n,$nav:t,$clicksContext:s,$clicks:a,$page:p,$renderContext:m,$frontmatter:_}=c(),l={$slidev:n,$nav:t,$clicksContext:s,$clicks:a,$page:p,$renderContext:m,$frontmatter:_,InjectedLayout:f,get frontmatter(){return i},get useSlideContext(){return c},get _provideFrontmatter(){return d},get _frontmatterToProps(){return g}};return Object.defineProperty(l,"__isScriptSetup",{enumerable:!1,value:!0}),l}},$=e("h1",null,"Step 9: Before you start",-1),C=e("div",{class:"dense"},[e("ul",null,[e("li",null,[o("We will be optimizing the rerendering of "),e("code",null,"DarkModeButtonChallenge"),o(" so we need to know when it renders")]),e("li",null,[o("A simple way to do this is to add a console log to the componentâ€™s body. E.g. "),e("code",null,'console.log("dark mode button rendered")')]),e("li",null,"Another way would be to use the React dev tools chrome extension (see next slide)"),e("li",null,[o("Clicking the "),e("strong",null,"Show filters"),o(" button will cause a re-render of the Dark mode button as a side effect. This is unnecessary and weâ€™ll learn how to prevent it from happening")])])],-1);function P(u,r,n,t,s,a){return w(),x(t.InjectedLayout,v(b(t._frontmatterToProps(t.frontmatter,36))),{default:k(()=>[$,C]),_:1},16)}const z=h(y,[["render",P],["__file","/@slidev/slides/37.md"]]);export{z as default};
